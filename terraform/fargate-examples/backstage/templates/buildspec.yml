version: 0.2

phases:
  install:
    runtime_versions:
      nodejs: 14
    commands:
      - npm install -g yarn
      - yarn install
  pre_build:
    commands:
      - echo $REPO_URL
      - REPOSITORY=${REPO_URL%/*}
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPOSITORY
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - cat app-config.yaml
  build:
    commands:
      - echo "Building from $(pwd)"
      - echo Build started on `date`
      - echo Building the Docker image...
      - yarn build
      - yarn build-image
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker tag backstage:latest $REPO_URL
      - docker tag $REPO_URL $REPO_URL:$IMAGE_TAG
      - docker push $REPO_URL:$IMAGE_TAG
      - echo Preparing spec files in new folder
      - mkdir artifacts
      - cp templates/imagedefinition.json artifacts/imagedefinition.json
      - echo Preparating artifacts
      - sed -i "s|<CONTAINER_NAME>|$CONTAINER_NAME|g" artifacts/imagedefinition.json
      - sed -i "s|<REPO_URL>|$REPO_URL:$IMAGE_TAG|g" artifacts/imagedefinition.json
      - cat artifacts/imagedefinition.json

artifacts:
  files:
    - '**/*'
  base-directory: 'artifacts'
  discard-paths: yes
  secondary-artifacts:
    frontend:
      name: 'frontend'
      files:
        - '**/*'
      base-directory: 'packages/app/dist'
      discard-paths: no
